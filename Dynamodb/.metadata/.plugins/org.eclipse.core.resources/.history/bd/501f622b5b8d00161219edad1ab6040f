import com.amazonaws.AmazonClientException;
import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.profile.ProfileCredentialsProvider;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.amazonaws.services.dynamodbv2.document.DynamoDB;


public class CreateTableWithGSI {

	public static void main(String[] args) {
		DynamoDB dynamoDB = getDynamoDB();
		

	// Attribute definitions
	ArrayList<AttributeDefinition> attributeDefinitions = new ArrayList<AttributeDefinition>();

	attributeDefinitions.add(new AttributeDefinition()
	    .withAttributeName("Location")
	    .withAttributeType("S"));
	attributeDefinitions.add(new AttributeDefinition()
	    .withAttributeName("Date")
	    .withAttributeType("S"));
	attributeDefinitions.add(new AttributeDefinition()
	    .withAttributeName("Precipitation")
	    .withAttributeType("N"));

	// Table key schema
	ArrayList<KeySchemaElement> tableKeySchema = new ArrayList<KeySchemaElement>();
	tableKeySchema.add(new KeySchemaElement()
	    .withAttributeName("Location")
	    .withKeyType(KeyType.HASH));  //Partition key
	tableKeySchema.add(new KeySchemaElement()
	    .withAttributeName("Date")
	    .withKeyType(KeyType.RANGE));  //Sort key

	// PrecipIndex
	GlobalSecondaryIndex precipIndex = new GlobalSecondaryIndex()
	    .withIndexName("PrecipIndex")
	    .withProvisionedThroughput(new ProvisionedThroughput()
	        .withReadCapacityUnits((long) 10)
	        .withWriteCapacityUnits((long) 1))
	        .withProjection(new Projection().withProjectionType(ProjectionType.ALL));

	ArrayList<KeySchemaElement> indexKeySchema = new ArrayList<KeySchemaElement>();

	indexKeySchema.add(new KeySchemaElement()
	    .withAttributeName("Date")
	    .withKeyType(KeyType.HASH));  //Partition key
	indexKeySchema.add(new KeySchemaElement()
	    .withAttributeName("Precipitation")
	    .withKeyType(KeyType.RANGE));  //Sort key

	precipIndex.setKeySchema(indexKeySchema);

	CreateTableRequest createTableRequest = new CreateTableRequest()
	    .withTableName("WeatherData")
	    .withProvisionedThroughput(new ProvisionedThroughput()
	        .withReadCapacityUnits((long) 5)
	        .withWriteCapacityUnits((long) 1))
	    .withAttributeDefinitions(attributeDefinitions)
	    .withKeySchema(tableKeySchema)
	    .withGlobalSecondaryIndexes(precipIndex);

	Table table = dynamoDB.createTable(createTableRequest);
	System.out.println(table.getDescription());
	}
	
	private static DynamoDB getDynamoDB(){
		/*
         * The ProfileCredentialsProvider will return your [default]
         * credential profile by reading from the credentials file located at
         * (/Users/ghemant/.aws/credentials).
         */
        AWSCredentials credentials = null;
        try {
            credentials = new ProfileCredentialsProvider("default").getCredentials();
        } catch (Exception e) {
            throw new AmazonClientException(
                    "Cannot load the credentials from the credential profiles file. " +
                    "Please make sure that your credentials file is at the correct " +
                    "location (/Users/ghemant/.aws/credentials), and is in valid format.",
                    e);
        }
        
        Region usWest2 = Region.getRegion(Regions.US_WEST_2);
		
		// This client will default to US West (Oregon)
		AmazonDynamoDBClient client = new AmazonDynamoDBClient(credentials);
		client.setRegion(usWest2);
		
		DynamoDB dynamoDB = new DynamoDB(client);
		return dynamoDB;
	}

}
